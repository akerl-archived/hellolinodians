#!/usr/bin/env ruby

require 'linodians'
require 'optparse'
require 'json'
require 'open-uri'
require 'uri'

$LOAD_PATH.unshift File.expand_path('../../lib/', __FILE__)
require 'hellolinodians/diff'
require 'hellolinodians/alert'
require 'hellolinodians/cache'

options = {}
OptionParser.new do |opts|
  opts.banner = 'Usage: ./bin/check [opts]'
  opts.on('-u', '--update', 'Update the DB with new data') do
    options[:update] = true
  end
  opts.on('-d', '--diff', 'Compare against last data') do
    options[:diff] = true
  end
  opts.on('-a', '--alert', 'Alert on changes') do
    options[:alert] = true
  end
  opts.on('-c', '--checkin', 'Check in with DeadManSnitch') do
    options[:checkin] = true
  end
  opts.on('-p', '--prod', 'Enable all production settings') do
    options = Hash.new(true)
  end
end.parse!

current = Linodians.new

Cache.write(current) unless File.exist? CACHE_FILE

if options[:diff]
  old_data = Cache.read
  fail unless old_data.size > 1
  diff = HelloLinodians::Diff.new(current, last)
  if options[:alert]
    diff.changes.each do |message|
      HelloLinodians::Alert.new(message).run!
    end
  end
end

Cache.write(current) if options[:update]

if options[:checkin]
  DMS_URL = ENV['DEADMANSSNITCH_URL']
  fail('No DMS URL provided') unless DMS_URL
  message = "found+#{current.size}+people"
  open("#{DMS_URL.strip}?m=#{message}")
end
